{{ define "todo-item" }}
  <li 
  id="todo-{{ .Id }}"
  hx-on::after-settle="document.getElementById(`edit-button-{{ .Id }}`).focus()"
  class="
  md:flex flex-wrap border-2 border-gray-500 p-2 rounded-lg 
  mb-4
  ">
    <div class="w-full md:w-auto md:flex flex-grow items-center">
        <input 
          {{ if .Done }} checked {{ end }} 
          hx-target="#todo-{{ .Id }}"
          hx-swap="outerHTML"
          hx-patch="/todo/{{ .Id }}/toggle" 
          id="checkbox-{{ .Id }}" 
          type="checkbox" 
          class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
        >

        <label 
            id="label-{{ .Id }}" 
            for="checkbox-{{ .Id }}" 
            class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-600">
          {{ .Text }}
        </label>
    </div>

    <div class="w-full md:w-auto mt-2 md:mt-0">
      <button 
        id="edit-button-{{ .Id }}"
        hx-get="/todo/{{ .Id }}/edit"
        hx-swap="outerHTML"
        hx-target="#todo-{{.Id }}"
        class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
      >
        Edit 
      </button>
      <button 
        hx-target="#todo-{{ .Id }}"
        hx-swap="outerHTML"
        hx-delete="/todo/{{ .Id }}"
        class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
      >
        Remove
      </button>
    </div>
    {{ if .Error }}
      <h1 class="w-full text-red-500">You are not allowed to have an error todo</h1>
    {{ end }}
  </li>
{{ end }}


{{ define "edit-todo" }}
  <li 
  hx-on::after-settle="
    let input = document.getElementById(`text-{{.Id}}`)
    input.focus()
    input.setSelectionRange(1000,1000);
  "
  id="todo-{{ .Id }}"
  class="
  md:flex border-2 border-gray-500 p-2 rounded-lg 
  justify-between 
  mb-4
  ">
  <form
    class="md:flex w-full mb-0"
    hx-patch="/todo/{{ .Id }}/edit"
    hx-target="#todo-{{.Id }}"
    hx-swap="outerHTML"
  >
    <div class="flex grow items-center">
        <input 
          {{ if .Done }} checked {{ end }} 
          name="todo-done"
          value="true"
          id="checkbox-{{ .Id }}" 
          type="checkbox" 
          onfocus="this.value = this.value"
          class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
        >

        <input 
          name="todo-text"
          type="text" 
          id="text-{{ .Id }}" 
          class="ml-2 mr-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2 " 
          required
          value="{{ .Text }}"
        >
    </div>

    <div class="mt-2 md:mt-0">
      <button 
        type="submit"
        class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
      >
       Submit 
      </button>
      <button 
        hx-target="#todo-{{ .Id }}"
        hx-swap="outerHTML"
        hx-delete="/todo/{{ .Id }}"
        class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
      >
        Remove
      </button>
    </form>
    </div>
  </li>
{{ end }}

{{ define "swap-todo" }}
  <div
  {{ if .Done }} hx-swap-oob="afterbegin:#complete-list" {{ end }}
  {{ if not  .Done }} hx-swap-oob="afterbegin:#incomplete-list" {{ end }}
  >
    {{ template "todo-item" . }}
  </div>
{{ end }}

{{ define "swap-single" }}
    {{ template "todo-item" . }}
{{ end }}
